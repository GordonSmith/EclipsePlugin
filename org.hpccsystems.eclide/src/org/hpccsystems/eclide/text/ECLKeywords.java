/*##############################################################################

    Copyright (C) 2011 HPCC Systems.

    All rights reserved. This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
############################################################################## */

package org.hpccsystems.eclide.text;

public class ECLKeywords {

	private static final String[] eclReserved1 = {
		"abs",
		"acos",
		"ascii",
		"asin",
		"asstring",
		"atan",
		"atan2",
		"ave",
		"case",
		"choose",
		"choosen",
		"choosesets",
		"clustersize",
		"cos",
		"cosh",
		"count",
		"cron",
		"dataset",
		"dedup",
		"denormalize",
		"distribute",
		"distributed",
		"distribution",
		"ebcdic",
		"enth",
		"error",
		"evaluate",
		"event",
		"exists",
		"exp",
		"fetch",
		"fromunicode",
		"getisvalid",
		"global",
		"group",
		"hash",
		"hash32",
		"hash64",
		"hashcrc",
		"hashmd5",
		"if",
		"index",
		"intformat",
		"isvalid",
		"iterate",
		"join",
		"keyunicode",
		"length",
		"limit",
		"ln",
		"log",
		"map",
		"matched",
		"matchlength",
		"matchposition",
		"matchtext",
		"matchunicode",
		"max",
		"merge",
		"min",
		"normalize",
		"parse",
		"pipe",
		"power",
		"preload",
		"project",
		"pull",
		"random",
		"rank",
		"ranked",
		"realformat",
		"recordof",
		"regexfind",
		"regexreplace",
		"rejected",
		"rollup",
		"round",
		"roundup",
		"row",
		"rowdiff",
		"sample",
		"set",
		"sin",
		"sinh",
		"sizeof",
		"soapcall",
		"sort",
		"sorted",
		"sqrt",
		"sum",
		"table",
		"tan",
		"tanh",
		"topn",
		"tounicode",
		"transfer",
		"trim",
		"truncate",
		"typeof",
		"ungroup",
		"unicodeorder",
		"which",
		"workunit",
		"xmldecode",
		"xmlencode",
		"xmltext",
		"xmlunicode"
	};

	private static final String[] eclReserved2 = {
		"apply",
		"build",
		"buildindex",
		"evaluate",
		"fail",
		"keydiff",
		"keypatch",
		"loadxml",
		"notify",
		"output",
		"parallel",
		"sequential",
		"soapcall"
	};

	private static final String[] eclReserved3 = {
		"all",
		"and",
		"any",
		"as",
		"atmost",
		"before",
		"beginc++",
		"best",
		"between",
		"case",
		"const",
		"counter",
		"csv",
		"descend",
		"encrypt",
		"end",
		"endc++",
		"endmacro",
		"except",
		"exclusive",
		"expire",
		"export",
		"extend",
		"false",
		"few",
		"first",
		"flat",
		"full",
		"function",
		"group",
		"header",
		"heading",
		"hole",
		"ifblock",
		"import",
		"in",
		"joined",
		"keep",
		"keyed",
		"last",
		"left",
		"limit",
		"load",
		"local",
		"locale",
		"lookup",
		"macro",
		"many",
		"maxcount",
		"maxlength",
		"min skew",
		"module",
		"named",
		"nocase(",
		"noroot",
		"noscan",
		"nosort",
		"not",
		"of",
		"only",
		"opt",
		"or",
		"outer",
		"overwrite",
		"packed",
		"partition",
		"penalty",
		"physicallength",
		"pipe",
		"quote",
		"record",
		"relationship",
		"repeat",
		"return",
		"right",
		"scan",
		"self",
		"separator",
		"service",
		"shared",
		"skew",
		"skip",
		"sql",
		"store",
		"terminator",
		"thor",
		"threshold",
		"token",
		"transform",
		"trim",
		"true",
		"type",
		"unicodeorder",
		"unsorted",
		"validate",
		"virtual",
		"whole",
		"wild",
		"within",
		"xml",
		"xpath",
		"__compressed__"
	};

	private static final String[] eclReserved4 = {
		"ascii",
		"big_endian",
		"boolean",
		"data",
		"decimal",
		"ebcdic",
		"integer",
		"pattern",
		"qstring",
		"real",
		"record",
		"rule",
		"set of",
		"string",
		"token",
		"udecimal",
		"unicode",
		"unsigned",
		"varstring",
		"varunicode"
	};

	private static final String[] eclReserved5 = {
		"checkpoint",
		"deprecated",
		"failcode",
		"failmessage",
		"failure",
		"global",
		"independent",
		"onwarning",
		"persist",
		"priority",
		"recovery",
		"stored",
		"success",
		"wait",
		"when"
	};

	private static final String[] eclReserved6 = {
		"#append",
		"#break",
		"#declare",
		"#demangle",
		"#end",
		"#for",
		"#getdatatype",
		"#if",
		"#inmodule",
		"#loop",
		"#mangle",
		"#onwarning",
		"#option",
		"#set",
		"#stored",
		"#uniquename",
		"#workunit"
	};

	public static final String[] getKeywords(int i) {
		switch (i) {
		case 0:
			return eclReserved1;
		case 1:
			return eclReserved2;
		case 2:
			return eclReserved3;
		case 3:
			return eclReserved4;
		case 4:
			return eclReserved5;
		case 5:
			return eclReserved6;
		}
		String[] emptyList = {};
		return emptyList;
	}
}
